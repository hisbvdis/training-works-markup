{"version":3,"file":"script.js","mappings":"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","sources":["webpack://24072021-prime-orchestra/./src/js/parts/carousel.js","webpack://24072021-prime-orchestra/./src/js/parts/map.js","webpack://24072021-prime-orchestra/./src/js/parts/spoiler.js","webpack://24072021-prime-orchestra/webpack/bootstrap","webpack://24072021-prime-orchestra/./src/js/parts/modal.js","webpack://24072021-prime-orchestra/./src/js/parts/side.js"],"sourcesContent":["document.addEventListener(\"click\", forcarouselbtn_onDocument_Click_Handler);\n\n\n\n// =================================================================\n// ФУНКЦИИ\n// =================================================================\n// Предыдущий элемент\nfunction prevSlide(currentItem) {\n  let prevItem = currentItem.previousElementSibling;\n  if (!prevItem) return;\n\n  currentItem.classList.remove(\"carousel__item--visible\");\n  prevItem.classList.add(\"carousel__item--visible\");\n}\n\n// Следующий элемент\nfunction nextSlide(currentItem) {\n  let nextItem = currentItem.nextElementSibling;\n  if (!nextItem) return;\n\n  currentItem.classList.remove(\"carousel__item--visible\");\n  nextItem.classList.add(\"carousel__item--visible\");\n}\n\n\n// =================================================================\n// ОБРАБОТЧИКИ\n// =================================================================\n// Нажали кнопку листания\n//    => Пролистать\nfunction forcarouselbtn_onDocument_Click_Handler(evt) {\n  let trigger = evt.target.closest(\"[data-trigger='carousel']\");\n  if (!trigger) return;\n  evt.preventDefault();\n\n  let direction = trigger.dataset.dir;\n  let slides = document.querySelector(trigger.dataset.target);\n  let currentItem = slides.querySelector(\".carousel__item--visible\")\n  \n  if (direction === \"prev\") prevSlide(currentItem);\n  if (direction === \"next\") nextSlide(currentItem);\n}","let map = L.map('map__leaflet', {\n  scrollWheelZoom: false,\n  zoomControl: false,\n}).setView([51.505, -0.09], 13);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n}).addTo(map);","let openedSpoiler;\n\n\ndocument.addEventListener(\"click\", forSpoilerSummary_onDocument_Click_Handler);\n\n\nfunction openSpoiler(elem) {\n  elem.setAttribute(\"open\", true)\n\n  if (openedSpoiler) closeSpoiler(openedSpoiler);\n  openedSpoiler = elem;\n\n  document.addEventListener(\"click\", forSpoiler_onDocument_Click_Handler);\n}\n\n\nfunction closeSpoiler(elem) {\n  elem.removeAttribute(\"open\")\n  openedSpoiler = null;\n}\n\n\nfunction forSpoilerSummary_onDocument_Click_Handler(evt) {\n  let trigger = evt.target.closest(\"[data-role='spoilerTrigger']\");\n  if (!trigger) return;\n  evt.preventDefault();\n\n  let spoiler = trigger.closest(\"details\");\n  \n  if (!spoiler.open) {\n    openSpoiler(spoiler);\n  }\n  else if (spoiler.open) {\n    closeSpoiler(spoiler);\n  }\n}\n\n\nfunction forSpoiler_onDocument_Click_Handler(evt) {\n  if (evt.target.closest(\"[data-js='answer']\")) return;\n  if (evt.target.closest(\"[data-role='spoilerTrigger']\")) return;\n\n  closeSpoiler(openedSpoiler);\n\n  document.removeEventListener(\"click\", forSpoiler_onDocument_Click_Handler);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","let openedModal = null;\n\nlet trigger = null;\nlet ctrlEnterBtn = null;\nlet openActions = null;\nlet closeActions = null;\n\nlet modalElems = null;\nlet firstModalElem = null;\nlet lastModalElem = null;\nlet clickOnLayout = false;\n\n\n// Обработчики для функционирования модального окна:\n// - нажатие на кнопки, открывающие модальное окно\ndocument.addEventListener(\"click\", forTrigger_onDocument_onClick_Handler);\n// - открытие модального окна при нажатии \"назад/вперёд\" в браузере\nwindow.addEventListener(\"popstate\", forModal_onWindow_onPopstate_Handler);\n\n\n\n// =================================================================\n// ФУНКЦИИ\n// =================================================================\n// Открыть модальное окно\nexport function openModal(modal, params) {\n  // Разобрать параметры и назначить глобальные переменные\n  openedModal = modal;\n  trigger = params.trigger;\n  openActions = params.openActions;\n  closeActions = params.closeActions;\n  ctrlEnterBtn = modal.querySelector(\"[data-ctrl-enter-btn]\");\n\n  // У <body> задать класс модального окна (прокрутка и отступ)\n  document.body.classList.add(\"modalOpened\");\n\n  // Показать подальное окно\n  modal.setAttribute(\"aria-hidden\", \"false\");\n  modal.setAttribute(\"tabindex\", \"0\");\n  modal.classList.add(\"modal--opened\");\n\n  // Работа с фокусом окна\n  modalElems = getModalElems(modal);\n  firstModalElem = modalElems[0];\n  lastModalElem = modalElems[modalElems.length - 1];\n  if (onlyButtons(modalElems)) {\n    focusOn(modal.querySelector(\"[data-focus]\"));\n  } else {\n    focusOn(firstModalElem);\n  }\n\n  // Добавить в историю браузера новую запись с определённым названием\n  history.pushState(\"fromSite\", \"\");\n\n  // Добавление обработчиков модального окна\n  modal.addEventListener(\"pointerdown\", backdrop_Pointerdown_Handler);\n  modal.addEventListener(\"click\", backdrop_Click_Handler);\n  modal.addEventListener(\"click\", forCloseBtn_onModal_Click_Handler);\n  firstModalElem.addEventListener(\"keydown\", firstModalElem_Keydown_Tab_Handler);\n  lastModalElem.addEventListener(\"keydown\", lastModalElem_Keydown_ShiftTab_Handler);\n  document.addEventListener(\"keydown\", document_Keydown_Escape_Handler);\n  document.addEventListener(\"keydown\", forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler);\n\n  // Выполнение команд открытия окна, которые были переданы при его открытии\n  openActions?.forEach(action => action());\n}\n\n\n// Закрыть модальное окно\nfunction closeModal(modal) {\n  // У <body> удалить класс модального окна\n  document.body.classList.remove(\"modalOpened\");\n\n  // Скрыть модальное окно\n  modal.setAttribute(\"aria-hidden\", \"true\");\n  modal.setAttribute(\"tabindex\", \"-1\");\n  modal.classList.remove(\"modal--opened\");\n\n  // Переход \"назад\" в истории так, чтобы не создавать дубликаты в истории\n  history.state ? history.back() : history.replaceState(null, \"\");\n\n  // Фокус на элементе, вызвавшем модальное окно\n  trigger.focus();\n\n  // Удаление обработчиков модального окна\n  modal.removeEventListener(\"pointerdown\", backdrop_Pointerdown_Handler);\n  modal.removeEventListener(\"click\", backdrop_Click_Handler);\n  modal.removeEventListener(\"click\", forCloseBtn_onModal_Click_Handler);\n  firstModalElem.removeEventListener(\"keydown\", firstModalElem_Keydown_Tab_Handler);\n  lastModalElem.removeEventListener(\"keydown\", lastModalElem_Keydown_ShiftTab_Handler);\n  document.removeEventListener(\"keydown\", document_Keydown_Escape_Handler);\n  document.removeEventListener(\"keydown\", forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler);\n\n  // Выполнение команд закрытия окна, которые были переданы при его открытии\n  closeActions?.forEach(action => action());\n\n  // Удалить глобальные переменные\n  openedModal = null;\n\n  trigger = null;\n  ctrlEnterBtn = null;\n  openActions = null;\n  closeActions = null;\n\n  modalElems = null;\n  firstModalElem = null;\n  lastModalElem = null;\n  clickOnLayout = false;\n}\n\n\nfunction getModalElems(modal) {\n  let selectors = [\n    'a[href]',\n    'area[href]',\n    'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n    'select:not([disabled]):not([aria-hidden])',\n    'textarea:not([disabled]):not([aria-hidden])',\n    'button:not([disabled]):not([aria-hidden])',\n    'iframe',\n    'object',\n    'embed',\n    '[contenteditable]',\n    '[tabindex]:not([tabindex^=\"-\"])',\n  ];\n\n  let elems = modal.querySelectorAll(selectors);\n\n  return Array.from(elems);\n}\n\n\nfunction focusOn(elem) {\n  elem?.focus({preventcarousel:true});\n}\n\n\nfunction onlyButtons(elems) {\n  return elems.every(elem => elem.tagName === \"BUTTON\");\n}\n\n\n\n// =================================================================\n// ОБРАБОТЧИКИ\n// =================================================================\n// Если нажали на кнопку открытия модального окна\n//    =>  Открыть модальное окно\nfunction forTrigger_onDocument_onClick_Handler(evt) {\n  let trigger = evt.target.closest(\"[data-trigger='true']\");\n  if (!trigger) return;\n  evt.preventDefault();\n\n  let modal = document.querySelector(\"#\" + trigger.dataset.modal);\n\n  openModal(modal, {trigger});\n}\n\n\n// Если нажали \"Назад\" в браузере\n//    =>  Закрыть модальное окно\nfunction forModal_onWindow_onPopstate_Handler() {\n  if (openedModal === null) return;\n\n  closeModal(openedModal);\n}\n\n\n// Если надавили ЛКМ\n//    => Проверить и записать, является ли целевой элемент подложкой\nfunction backdrop_Pointerdown_Handler(evt) {\n  if (evt.which !== 1) return;\n\n  clickOnLayout = evt.target.classList.contains(\"modal\");\n}\n\n\n// Если нажали на фон модального окна\n//    =>  Закрыть модальное окно\nfunction backdrop_Click_Handler(evt) {\n  if (evt.which !== 1) return;\n  if (clickOnLayout === false) return;\n  if (!evt.target.classList.contains(\"modal\")) return;\n\n  closeModal(openedModal);\n}\n\n\n// Если в открытом модальном окне кликнули на кнопку \"Закрыть\"\n//    =>  Закрыть модальное окно\nfunction forCloseBtn_onModal_Click_Handler(evt) {\n  if (evt.target.dataset.closeBtn === undefined) return;\n\n  closeModal(openedModal);\n}\n\n\n// Если при открытом модальном окне нажали \"Escape\"\n//   =>  Закрыть модальное окно\nfunction document_Keydown_Escape_Handler(evt) {\n  if (evt.code !== \"Escape\") return;\n\n  closeModal(openedModal);\n}\n\n\n// Если в открытом модальном окне нажали \"Ctrl+Enter\"\n//    =>  Нажать кнопку \"Ctrl+Enter Button\"\nfunction forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler(evt) {\n  if (!evt.ctrlKey) return;\n  if (evt.code !== \"Enter\" && evt.code !== \"NumpadEnter\") return;\n\n  evt.preventDefault();\n  ctrlEnterBtn?.click();\n}\n\n\n// Если на первом элементе формы нажали Shift+Tab\n//    =>  Фокус на последний элемент\nfunction firstModalElem_Keydown_Tab_Handler(evt) {\n  if (evt.code !== \"Tab\") return;\n  if (!evt.shiftKey) return;\n  evt.preventDefault();\n\n  focusOn(lastModalElem);\n}\n\n\n// Если на последнем элементе формы нажали Tab\n//    =>  Фокус на первый элемент\nfunction lastModalElem_Keydown_ShiftTab_Handler(evt) {\n  if (evt.code !== \"Tab\") return;\n  if (evt.shiftKey) return;\n  evt.preventDefault();\n\n  focusOn(firstModalElem);\n}","import {openModal} from \"./modal.js\";\nconst sideBtn = document.querySelector(\".sideBtn\");\n\n\nsideBtn.addEventListener(\"click\", sideBtn_Click_Handler);\n\n\n\n// Нажали на кнопку \"Меню\"\n//   => Добавить/убрать из <body> класс \"sideOpened\"\nfunction sideBtn_Click_Handler(evt) {\n  if (evt.which !== 1) return;\n\n  let id = this.dataset.modal;\n  let modal = document.querySelector(`#${id}`);\n\n  // openModal(modal, {trigger: this, bodyClass: \"sideOpened\"});\n  openModal(modal, {\n    trigger: this,\n    openActions: [() => document.body.classList.add(\"sideOpened\")],\n    closeActions: [() => document.body.classList.remove(\"sideOpened\")],\n  });\n}"],"names":["document","addEventListener","evt","trigger","target","closest","preventDefault","direction","dataset","dir","currentItem","querySelector","prevItem","previousElementSibling","classList","remove","add","prevSlide","nextItem","nextElementSibling","nextSlide","map","L","scrollWheelZoom","zoomControl","setView","tileLayer","attribution","addTo","openedSpoiler","closeSpoiler","elem","removeAttribute","forSpoiler_onDocument_Click_Handler","removeEventListener","spoiler","open","setAttribute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","openedModal","ctrlEnterBtn","openActions","closeActions","modalElems","firstModalElem","lastModalElem","clickOnLayout","openModal","modal","params","body","elems","querySelectorAll","Array","from","getModalElems","length","every","tagName","focusOn","history","pushState","backdrop_Pointerdown_Handler","backdrop_Click_Handler","forCloseBtn_onModal_Click_Handler","firstModalElem_Keydown_Tab_Handler","lastModalElem_Keydown_ShiftTab_Handler","document_Keydown_Escape_Handler","forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler","forEach","action","closeModal","state","back","replaceState","focus","preventcarousel","which","contains","closeBtn","code","ctrlKey","click","shiftKey","window","id","this"],"sourceRoot":""}