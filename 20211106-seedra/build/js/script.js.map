{"version":3,"file":"script.js","mappings":"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","sources":["webpack:///./src/js/libraries/modal.js"],"sourcesContent":["let openedModal = null;\n\nlet trigger = null;\nlet ctrlEnterBtn = null;\nlet openActions = null;\nlet closeActions = null;\n\nlet modalInteractElems = null;\nlet firstModalElem = null;\nlet lastModalElem = null;\nlet clickOnLayout = false;\n\n\n// Обработчики для функционирования модального окна:\n// - нажатие на кнопки, открывающие модальное окно\ndocument.addEventListener(\"click\", forTrigger_onDocument_onClick_Handler);\n// - открытие модального окна при нажатии \"назад/вперёд\" в браузере\nwindow.addEventListener(\"popstate\", forModal_onWindow_onPopstate_Handler);\n\n\n\n// =================================================================\n// ФУНКЦИИ\n// =================================================================\n// Открыть модальное окно\nexport function openModal(modal, params) {\n  // Разобрать параметры и назначить глобальные переменные\n  openedModal = modal;\n  trigger = params.trigger;\n  openActions = params.openActions;\n  closeActions = params.closeActions;\n  ctrlEnterBtn = modal.querySelector(\"[data-ctrl-enter-btn]\");\n\n  // У <body> задать класс модального окна (прокрутка и отступ)\n  document.body.classList.add(\"body--withModal\");\n\n  // Показать подальное окно\n  modal.setAttribute(\"aria-hidden\", \"false\");\n  modal.setAttribute(\"tabindex\", \"0\");\n  modal.classList.add(\"modal--isOpen\");\n\n  // Работа с фокусом окна\n  modalInteractElems = getModalInteractElems(modal);\n  firstModalElem = modalInteractElems[0];\n  lastModalElem = modalInteractElems[modalInteractElems.length - 1];\n  if (onlyButtons(modalInteractElems)) {\n    focusOn(modal.querySelector(\"[data-focus]\"));\n  } else {\n    focusOn(firstModalElem);\n  }\n\n  // Добавить в историю браузера новую запись с определённым названием\n  history.pushState(\"fromSite\", \"\");\n\n  // Добавление обработчиков модального окна\n  modal.addEventListener(\"pointerdown\", backdrop_Pointerdown_Handler);\n  modal.addEventListener(\"click\", backdrop_Click_Handler);\n  modal.addEventListener(\"click\", forCloseBtn_onModal_Click_Handler);\n  firstModalElem?.addEventListener(\"keydown\", firstModalElem_Keydown_Tab_Handler);\n  lastModalElem?.addEventListener(\"keydown\", lastModalElem_Keydown_ShiftTab_Handler);\n  document.addEventListener(\"keydown\", document_Keydown_Escape_Handler);\n  document.addEventListener(\"keydown\", forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler);\n\n  // Выполнение команд открытия окна, которые были переданы при его открытии\n  openActions?.forEach(action => action());\n}\n\n\n// Закрыть модальное окно\nfunction closeModal(modal) {\n  // У <body> удалить класс модального окна\n  document.body.classList.remove(\"body--withModal\");\n\n  // Скрыть модальное окно\n  modal.setAttribute(\"aria-hidden\", \"true\");\n  modal.setAttribute(\"tabindex\", \"-1\");\n  modal.classList.remove(\"modal--isOpen\");\n\n  // Переход \"назад\" в истории так, чтобы не создавать дубликаты в истории\n  history.state ? history.back() : history.replaceState(null, \"\");\n\n  // Фокус на элементе, вызвавшем модальное окно\n  trigger.focus();\n\n  // Удаление обработчиков модального окна\n  modal.removeEventListener(\"pointerdown\", backdrop_Pointerdown_Handler);\n  modal.removeEventListener(\"click\", backdrop_Click_Handler);\n  modal.removeEventListener(\"click\", forCloseBtn_onModal_Click_Handler);\n  firstModalElem.removeEventListener(\"keydown\", firstModalElem_Keydown_Tab_Handler);\n  lastModalElem.removeEventListener(\"keydown\", lastModalElem_Keydown_ShiftTab_Handler);\n  document.removeEventListener(\"keydown\", document_Keydown_Escape_Handler);\n  document.removeEventListener(\"keydown\", forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler);\n\n  // Выполнение команд закрытия окна, которые были переданы при его открытии\n  closeActions?.forEach(action => action());\n\n  // Удалить глобальные переменные\n  openedModal = null;\n\n  trigger = null;\n  ctrlEnterBtn = null;\n  openActions = null;\n  closeActions = null;\n\n  modalInteractElems = null;\n  firstModalElem = null;\n  lastModalElem = null;\n  clickOnLayout = false;\n}\n\n\nfunction getModalInteractElems(modal) {\n  let selectors = [\n    'a[href]',\n    'area[href]',\n    'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n    'select:not([disabled]):not([aria-hidden])',\n    'textarea:not([disabled]):not([aria-hidden])',\n    'button:not([disabled]):not([aria-hidden])',\n    'iframe',\n    'object',\n    'embed',\n    '[contenteditable]',\n    '[tabindex]:not([tabindex^=\"-\"])',\n  ];\n\n  let elems = modal.querySelectorAll(selectors);\n\n  return Array.from(elems);\n}\n\n\nfunction focusOn(elem) {\n  elem?.focus({preventScroll:true});\n}\n\n\nfunction onlyButtons(elems) {\n  return elems.every(elem => elem.tagName === \"BUTTON\");\n}\n\n\n\n// =================================================================\n// ОБРАБОТЧИКИ\n// =================================================================\n// Нажали на кнопку открытия модального окна\n//    =>  Открыть модальное окно\nfunction forTrigger_onDocument_onClick_Handler(evt) {\n  let trigger = evt.target.closest(\"[data-modal-trigger='true']\");\n  if (!trigger) return;\n  evt.preventDefault();\n\n  let modal = document.querySelector(\"#\" + trigger.dataset.targetModalId);\n\n  openModal(modal, {trigger});\n}\n\n\n// Нажали \"Назад\" в браузере\n//    =>  Закрыть модальное окно\nfunction forModal_onWindow_onPopstate_Handler() {\n  if (openedModal === null) return;\n\n  closeModal(openedModal);\n}\n\n\n// Надавили указатель (ЛКМ)\n//    => Проверить и записать, является ли целевой элемент подложкой\nfunction backdrop_Pointerdown_Handler(evt) {\n  if (evt.which !== 1) return;\n\n  clickOnLayout = evt.target.classList.contains(\"modal\");\n}\n\n\n// Нажали на фон модального окна\n//    =>  Закрыть модальное окно\nfunction backdrop_Click_Handler(evt) {\n  if (evt.which !== 1) return;\n  if (clickOnLayout === false) return;\n  if (!evt.target.classList.contains(\"modal\")) return;\n\n  closeModal(openedModal);\n}\n\n\n// В открытом модальном окне кликнули на кнопку \"Закрыть\"\n//    =>  Закрыть модальное окно\nfunction forCloseBtn_onModal_Click_Handler(evt) {\n  if (evt.target.dataset.closeBtn === undefined) return;\n\n  closeModal(openedModal);\n}\n\n\n// При открытом модальном окне нажали \"Escape\"\n//   =>  Закрыть модальное окно\nfunction document_Keydown_Escape_Handler(evt) {\n  if (evt.code !== \"Escape\") return;\n\n  closeModal(openedModal);\n}\n\n\n// В открытом модальном окне нажали \"Ctrl+Enter\"\n//    =>  Нажать кнопку \"Ctrl+Enter Button\"\nfunction forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler(evt) {\n  if (!evt.ctrlKey) return;\n  if (evt.code !== \"Enter\" && evt.code !== \"NumpadEnter\") return;\n\n  evt.preventDefault();\n  ctrlEnterBtn?.click();\n}\n\n\n// На первом элементе формы нажали Shift+Tab\n//    =>  Фокус на последний элемент\nfunction firstModalElem_Keydown_Tab_Handler(evt) {\n  if (evt.code !== \"Tab\") return;\n  if (!evt.shiftKey) return;\n  evt.preventDefault();\n\n  focusOn(lastModalElem);\n}\n\n\n// На последнем элементе формы нажали Tab\n//    =>  Фокус на первый элемент\nfunction lastModalElem_Keydown_ShiftTab_Handler(evt) {\n  if (evt.code !== \"Tab\") return;\n  if (evt.shiftKey) return;\n  evt.preventDefault();\n\n  focusOn(firstModalElem);\n}"],"names":["openedModal","trigger","ctrlEnterBtn","openActions","closeActions","modalInteractElems","firstModalElem","lastModalElem","clickOnLayout","openModal","modal","params","querySelector","document","body","classList","add","setAttribute","elems","querySelectorAll","Array","from","getModalInteractElems","length","every","elem","tagName","focusOn","history","pushState","addEventListener","backdrop_Pointerdown_Handler","backdrop_Click_Handler","forCloseBtn_onModal_Click_Handler","firstModalElem_Keydown_Tab_Handler","lastModalElem_Keydown_ShiftTab_Handler","document_Keydown_Escape_Handler","forCtrlEnterBtn_onDocument_Keydown_CtrlEnter_Handler","forEach","action","closeModal","remove","state","back","replaceState","focus","removeEventListener","preventScroll","evt","which","target","contains","undefined","dataset","closeBtn","code","ctrlKey","preventDefault","click","shiftKey","closest","targetModalId","window"],"sourceRoot":""}